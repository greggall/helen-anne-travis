/* mixins.scss */
@mixin vertical-align {
    position: relative;
    top: 50%;
    -webkit-transform: translateY(-50%);
    -ms-transform: translateY(-50%);
    transform: translateY(-50%);
  }
  
  @mixin vertical-align {
    position: relative;
    top: 50%;
    -webkit-transform: translateY(-50%);
    -ms-transform: translateY(-50%);
    transform: translateY(-50%);
  }
  
  @mixin input {
      background: none;
      height: 55px;
      border-radius: 10px;
      border: 1px solid $border-color;
      font-size: 1em;
      padding-left: 15px;
      cursor: pointer;
  }
  
  @mixin transition {
      -webkit-transition-duration: 0.5s;
      transition-duration: 0.5s;
  }
  
  @mixin rounded($radius) {
       -webkit-border-radius: $radius;
          -moz-border-radius: $radius;
               border-radius: $radius;
  }
  
  @mixin shadow1($x1, $y1, $blur1, $shadow-color1, $x2, $y2, $blur2, $shadow-color2) {
           box-shadow: $x1 $y1 $blur1 $color1, $x2 $y2 $blur2 $color2;
  }
  
  @mixin shadow-inset($x, $y, $blur, $color) {
           -webkit-box-shadow: inset $x $y $blur $color;
              -moz-box-shadow: inset $x $y $blur $color;
                   box-shadow: inset $x $y $blur $color;
  }
  
  @mixin transition($property) {
           -webkit-transition: $property .3s ease;
              -moz-transition: $property .3s ease;
                -o-transition: $property .3s ease;
                   transition: $property .3s ease;
  }
  
  @mixin box-sizing {
           -webkit-box-sizing: border-box;
              -moz-box-sizing: border-box;
                   box-sizing: border-box;
  }
  
  @mixin linear-gradient($from, $to) {
           /* Fallback for sad browsers */
           background-color: $to;
           /* Mozilla Firefox */
           background-image:    -moz-linear-gradient($from, $to);
           /* Opera */
           background-image:      -o-linear-gradient($from, $to);
           /* WebKit (Chrome 11+) */
           background-image:        -webkit-gradient(linear, »
             left top, left bottom, color-stop(0, $from), »
             color-stop(1, $to));
           /* WebKit (Safari 5.1+, Chrome 10+) */
           background-image: -webkit-linear-gradient($from, $to);
           /* IE10 */
           background-image:     -ms-linear-gradient($from, $to);
           /* W3C */
           background-image:         linear-gradient($from, $to);
  }
  
  /*Set a rem font size with pixel fallback*/
  @function calculateRem($size) {
    $remSize: $size / 16px;
    @return $remSize * 1rem;
  }
  
  @mixin font-size($size) {
    font-size: $size;
    font-size: calculateRem($size);
  }